---
layout: post
title: "linux随笔"
date: 2010-01-18 15:09:43 +0800
comments: true
categories: technology
description: 'linux命令'
keywords: linux,debian,vi
---

linux是服务器端操作系统不二之选，是从事程序开发必备技能之一。本文记录linux的基础命令(debian版本)。

<!--more-->

##vi
vi + file 打开file文件光标定位至最后一行  
vi +4 file 打开并定位到第四行  
vi +/word file 打开并定位到第一个word所在的行 
vi a b c 打开a b c文件底部命令n切换下个文件，N切换上个文件    
按`h` `j` `k` `l`光标移动为 左，下，上，右   
`ctrl+f` 向前移动一页   
`ctrl+b` 向后移动一页   
`ctrl+d` 向前移动半页   
`ctrl+u` 向后移动半页  
`+` 向下移动一行  
`-` 向上移动一行

`/word` 光标后查找word字符串 按n查找下一个    
`?word` 光标前查找word字符串

```
x # 向后删除一个字符(`10x` 向后删除10个字符)
X # 向前删除一个字符
dd # 删除光标所在行(`10dd` 删除光标所在向下10行, `d10G` 删除光标所在到第10行, `dG` 删除光标及以下所有行)
yy # 复制光标所在行(`10yy` 复制光标所在向下10行, `y10G` 复制光标所在到第10行, `yG` 复制光标及以下所有行)
p # 粘贴在光标下一行
P # 粘贴在光标上一行
J # 光标所在行与下一行合并
u # 复原前一个动作
```

按`i` `I` `o` `O` `a` `A` `r` `R`进入编辑模式  
按`ESC`退出编辑模式  
按`:` `/`进入命令行模式

```
:w fileName # 保存为fileName(3,7 w file 将3到7行的内容存为file)
:r fileName # 将fileName加到光标所在行后面
:wq # 存盘并退出(wx 亦可)
:w! # 若为只读属性，则强制写入
:e! # 还原至原始状态
:q! # 不存盘退出
:ls # 列出所有打开的文件
:15 # 光杆定位至15行
:set nu # 显示行号
:set nonu # 取消行号
```
##shell
rm[remove] 删除文件或目录  
rm -f filename -f 强制删除文件不提醒。-r 删除目录

cp[copy] 复制文件/文件夹  
cp -i 源文件 目标文件 -i 当目标文件存在时提示。-r 复制文件夹
-p  连带文件属性复制，-d 若源文件是链接文件，则复制链接属性
-a 相当于 -rpd

cd[change directory] 切换目录  
cd .. 返回上一层。cd 返回用户目录。cd - 进入上次目录

cat 显示文件内容  
cat > filename 创建一个文件。cat file1 file2 > file 合并文件

more 显示文件内容  
和cat类似，分屏显示

less 显示文件内容  
j 向后滚动浏览，k 向前浏览， g 页首,  G 页尾,  q 退出

ls[ list ] 列出目录内容  
ls -a 显示所有文件包含以.开头的隐含文件。ls -l 列出文件的详细信息
ls -d 查看目录属性，ls -h 人性化显示文件大小, ll 等同于 ls -l

mv[move] 移动或更名现有目录或文件  
mv -i 源文件 目标文件 -i 当目标文件存在时提示 -f 禁止交互操作,不提示,-i失去作用。mv * ../ 移动当前所有文件到上一级。

mkdir[make directories] 建立目录  
mkdir -p aa/aa/bb 递归创建三个目录

file xx.txt  检测文件类型

chmod[change mode] 更改文件或目录的权限  
chmod a=rwx file 更改file为所有权限。chmod abc file a代表user,b代表group,c代表other 的权限,r=4,w=2,x=1 chmod -R 777 file 文件夹及子文件夹一并处理

chown[change owner] 变更文件或目录的拥有者或所属群组  
chown oracle:net /home/u1 表示改变目录所有者为oracle账户和组net -R 递归处理，将指定目录下的所有文件及子目录一并处理

chgrp[change group] 变更文件或目录的所属群组  
chgrp dba /home/u1 改变/home/u1目录为dba所有 -R 递归处理，将指定目录下的所有文件及子目录一并处理

tar[tape archive] 打包文件  
```
tar -cvf xx.tar xx.txt/xx 打包xx.txt文件或xx目录。
tar -xvf xx.tar /var/www/ 解包xx.tar文件至/var/www/
tar -rf xx.tar xx.txt 增加备份xx.txt文件
tar -tf xx.tar 查看xx.tar里文件
tar -tf 1.tar | grep 1.txt 查找1.tar中的1.txt文件 去掉txt则查找1文件
tar -exclude a -cf xx.tar * 打包当前目录所有的文件除了a文件夹
tar -zcvf xx.tar.gz xx  打包并压缩xx为gz文件，-zxvf 解压
tar -jcvf xx.tar.bz2 xx  打包并压缩xx为bz2文件，-jxvf 解压
```
du[disk usage] 显示目录或文件的大小  
du -sh /var 显示var的大小

pwd[print working directory] 显示工作目录

id 显示用户的ID，以及所属群组的ID

mount 加载文件系统  
-r 以只读的模式载入设备 -w 以可读写模式载入设备 mount /dev/hda5/ /mnt 把hda5加载到/mnt

umount 卸载文件系统  
umount 设备文件名或挂载点 卸载时需要退出挂载点所在路径

man 查看命令帮助信息  
按q退出

zip aa.zip aa  压缩aa文件为aa.zip，-r 压缩目录

unzip 解压缩zip文件  
unzip xx.zip 解压xx.zip文件。unzip -d /www xx.zip 解压xx.zip文件到www。unzip -l xx.zip 查看xx.zip包含哪些文件。-o 不询问用户覆盖原有文件。-f 更新现有文件。

gzip aa  压缩aa文件为 aa.gz, 压缩完成后，源文件aa会消失，-r 压缩目录下所有子目, -d 解压缩文件

gunzip aa.gz 解压缩

bzip2 aa 压缩aa文件为 aa.bz2，-k 保留源文件aa, -d 解压缩

bunzip2 aa.bz2 解压缩 -k 保留源文件

find 查找文件或目录
```
* 匹配任意内容，? 匹配一个字符，[]匹配任意中括号的内容

find / -name xx.txt 按名字查找xx.txt。find /usr/ -name 'a*' 查找usr文件下的a开头的文件    
find / -iname xx.txt 不区分大小写查找  
find / -size 10k  查大小为10kb的文件 k是小写，M是大写    
find / -size +1000c 查找大于10000btyes的文件，用减号表示小于10000字节  
find . -size +20M -a -size -5k  查找大于20m并且小于50kb的文件 -o 逻辑或
find . -size +10M -exec ls -lh {} \;  查当前大于10mb的文件并显示大小（ls -lh）
find / -mmin -5 查找最后5分钟修改过的文件    
find / -mtime -1 查找一天内修改过的文件  
find / -ctime +1 查找一天前改变文件属性的文件  
find / -atime 1 查找一天当天文件访问的文件    
find / -amin -10 查找在系统中最后10分钟访问的文件  
find / -atime -2 查找最后2天访问的文件  
find / -empty 查找为空的文件或文件夹  
find / -group cat 查找属于组cat的文件  
find / -nouser 查找没有所有者的文件  
find / -user fred 查找fred用户的文件  
find / -cmin n 查找是n分钟改变状态的文件  
find / -false 查找总是错误的文件  
find . -inum 262422 在当前路径查找i节点为262422的文件  
```
grep 搜索字符串，grep -i 'aaa' test.php 在test.php文件中查找 aaa 字符串 -i 不区分大小写，-v 排除指定字符串

locate 查找文件 只按文件名查
在后台数据库查，比find快，后台库在 /var/lib/mlocate  一天一更新，updatedb可强制更新, 配置文件在 /etc/updatedb.conf

wc[word count] 计算字数  
-c 只显示bytes数。-l 只显示列数。-w 只显示字数。  
wc < test.php  统计php文件

useradd 新增用户帐号  
-u 直接给出用户id。-g 给出用户组。-d 将根目录建立在已存在目录上。-s 定义shell 。useradd -d /home/weixiaohong -g www-data -s /bin/sh username

passwd 设置密码  
新增用户后，要设置密码，否则不能用。-d 使用户无密码 -l 锁定用户 -u 解锁用户

usermod 修改用户  
usermod -l newuser olduser 修改用户名olduser为newuser  
usermod -d /home/aa aa   修改用用户名aa目录为/home/aa  

userdel 删除用户  
userdel user 删除用户user，-r 属于user的文件也删除(最好不用)。-f 删除用户登入目录以及目录中所有文件

who 显示目前登入系统的用户信息  

w 显示目前登入系统的用户信息

last 显示当前和过去登录的用户信息

lastlog 显示所有用户最后一次的登录

alias 显示命令别名  alias vi='vim' 设置vim命令别名为vi(临时生效)

unalias vi 临时删除别名vi

vi ~/bashrc  设置别名永久生效

groupadd 增加用户组
groupadd -g 888 gname  创建编号为888的gname组

groupmod 修改用户组  
-n newgroup oldgroup 更改组名 -g 666 gname 修改gname组编号为666

groupdel 删除用户组 

gpasswd -a aa othergroup  为用户aa添加附属组othergroup -d 删除用户附属组

newgrp 登入另一个群组  
如果当前用户属于多个群组，可以切换到另个群组。

cat /etc/passwd 查用户信息

cat /etc/shadow 查看密码

cat /etc/group 查看用户组

cat /proc/version 查看系统信息

more /proc/cpuinfo 查看cpu信息

echo $PATH  显示环境变量  

echo a*  显示所有a开头的文件   

ifconfig 显示或设置网络设备

netstat -an 显示当前网络连接

free 显示内存状态  
-s 3 持续观察，间隔3秒。

ln 链接
-s 创建软链接。ln -s aaa bbb 不加s 创建硬链接，创软链接源文件和目标文件不在同目录，源文件需要是绝对路径

df[disk free] 显示磁盘的相关信息  
-h 以可读性较高的方式来显示硬盘剩余信息。-i 显示inode(索引)信息。-

tail -f filename 监视filename的尾部内容(默认10行) -n 20 最后20行，-n +20 前20行

startx[start X Window] 启动X Window

sync 将内存缓冲区内的数据写入磁盘

shutdown 系统关机指令  
shutdown -h now 将系统关机。-k 只是送出信息给所有用户，但不会实际关机。-r shutdown之后重新启动。shutdown -r +10 十分钟后重启。shutdown -h 10:00 十点钟重启. -c 取消前一个关机命令

reboot 重启

新建文件
```
vi xx.txt
echo “xxx” > xx.txt
cat > xx.txt
touch xx.txt
```
`ctrl+c` 中止当前命令的执行  
退出系统
```
ctrl+d
logout
exit
```
设置vi语法高亮显示  
修改 /etc/vim/vimrc ，使其syntax on前面的注释符去掉

history 保存了最近执行过的500条命令
```
!n 执行编号为n的命令
!-n 执行倒数第n个命令
!! 执行上一个历史命令（在历史记录中不加入）
!xx 执行以’xx’开头的历史命令
!?xx? 执行包含’xx’的历史命令
```
当输入到足够多的字符时，按tab会自动补全  
三种通配符
```
？表示任意的单个字符
* 表示任意长的任意字符串
[] 表示匹配放在[]中的字符集中的单个字符
[-] 匹配范转 如 [a-z]
[^] 匹配不是括号内的字符
```
shell使用的三种引号:

* 双引号” 在双引号除 $,”,’和\以外的特殊字符的特殊意义都解释成字符本身。
* 单引号' 纯字符，所有特殊字符都将失去意义
* 反引号` 反引号中的字符被解释成命令

输入重定向  
格式：命令 < 数据文件

输出重定向 
格式：命令 > 数据文件

例：cat file1 file2 > file.txt  
在文件名和’>’之间要放一个空格，数据文件不论原先是否存在，都是将命令的输出覆盖上去。

命令 >> 数据文件  
是输出追加符，若数据文件已存在，则添加到文件尾部，否则建立新的。 
命令 >> 文件 2>&1 或者 命令 &>>文件 命令执行的正确结果和错误都写入文件  
命令 >> 文件1 2>>文件2  把正确的输出追加到文件1，错误输出追加到文件2  

管道操作符  
命令1 | 命令2  命令1的正确输出作为命令2的操作对象  
;  连接多个命令，分号前后命令无因果关系  
&& 连接两个命令，前一个成功后一个执行  
|| 连接两个命令，前一个不成功后一个执行  

linux 文本启动方式  
修改 /etc/inittab 文件中的 id:5:initdefault 中的5改成3
>0：关机  
>1：单用户模式  
>2：多用户(不支持网络登录)  
>3：多用户  
>4：保留(系统保留)  
>5：x-window  
>6：重启  
>至此系统重启后就进入命令行状态，但是对debian系统来说，还是不行的，还需
进入 /etc/rc3.d。然后把s30gdm 改成k70gdm。
```
apt-get upgrade 把本机所有软件升级到最新版
apt-get clean 清除 /var/cache/apt/archives/ 下的缓存文件
apt-get autoclean 清除 archives 下没用的或不完整的软件包
```
`apt-get remove xx` 卸载xx软件
```
安装mysql5
sudo apt-get install mysql-server
安装apache2
sudo apt-get install apache2
安装php5
sudo apt-get install php5
安装php的mysql模块
sudo apt-get install php5-mysql
安装GD库
sudo apt-get install php5-gd
安装phpmyadmin
sudo apt-get install phpmyadmin
安装vsftpd
sudo apt-get install vsftpd
安装ssh
sudo apt-get install ssh
安装zip
sudo apt-get install unzip
```
>mysql的配置文件my.cnf /etc/mysql/my.cnf  
>apache2的配置文件apache2.conf /etc/apache2/apache2.conf  
>php的配置文件php.ini /etc/php5/apache2/php.ini  
>vsftpd的配置文件vsftpd.conf /etc/vsftpd.conf  

>apache的启动和停止命令 /etc/init.d/apache2 start|restart|stop  
>mysql的启动和停止命令 /etc/init.d/mysql start|restart|stop  
>vsftpd的配置文件 /etc/init.d/vsftpd start|restart|stop  

>mysql数据库文件存在/var/lib/mysql  

##shell快捷键
* ctrl + c  强制终止当前命令
* ctrl + l  清屏
* ctrl + a  光标移至行首
* ctrl + e  光标移至行尾
* ctrl + u  从光标所在位置删除到行首
* ctrl + z  把命令放入后台
* ctrl + r  在历史命令中搜索
